module Base
{
	model AM2_Courier
	{
		mesh = vehicles/AM2_Courier,
		shader = vehicle_norandom_multiuv,
		static = TRUE,
		invertX = FALSE,
		scale = 1.0,
	}
	model AM2_Courier_wheel_front
	{
		mesh = vehicles/AM2_BMW_wheel,
			texture = Vehicles/AM2_BMW,
		shader = vehiclewheel,
		scale = 0.8,
	}
	model AM2_Courier_wheel_rear
	{
		mesh = vehicles/AM2_BMW_wheel,
			texture = Vehicles/AM2_BMW,
		shader = vehiclewheel,
		scale = 0.9,
	}
	vehicle AM2_Courier
	{
		mechanicType = 5,
		engineRepairLevel = 4,
		playerDamageProtection = 1,
		offRoadEfficiency = 5.0,

		model
		{
			file = AM2_Courier,
			scale = 0.9000,
			offset = 0.0000 0.0222 -0.0667,
			rotate = 0 0 0,
		}

		skin
		{
			texture = Vehicles/AM2_Courier,
		}

		sound
		{
			engine = VehicleEngineSportsCar,
			engineStart = VehicleEngineSportsCar,
			engineTurnOff = VehicleEngineSportsCar,
			horn = VehicleHornSportsCar,
			ignitionFail = VehicleIgnitionFailSportsCar,
		}

		extents = 0.4444 0.8000 2.2222,
		mass = 175,
		physicsChassisShape = 0.4444 0.8000 2.2222,
		centerOfMassOffset = 0.0000 0.4000 -0.0222,
		shadowExtents = 0.4344 2.2200,
		shadowOffset = 0.0000 -0.0200,
		engineForce = 6000,
		engineQuality = 70,
		engineLoudness = 90,
		maxSpeed = 110f,
		gearRatioCount = 5,
		gearRatioR = 3.5,
		gearRatio1 = 4.11,
		gearRatio2 = 2.50,
		gearRatio3 = 1.65,
		gearRatio4 = 1.25,
		gearRatio5 = 0.80,
		stoppingMovementForce = 0.25f,
		rollInfluence = 0.7f,
		steeringIncrement = 0.04,
		steeringClamp = 0.3,
		suspensionStiffness = 50,
		suspensionCompression = 4.1,
		suspensionDamping = 3.4,
		maxSuspensionTravelCm = 20,
		suspensionRestLength = 0.2f,
		wheelFriction = 1.8f,
		frontEndHealth = 150,
		rearEndHealth = 150,
		seats = 2,

		wheel FrontLeft
		{
			front = true,
			offset = 0.0000 -0.0222 0.8222,
			radius = 0.144f,
			width = 0.575f,
		}

		wheel RearLeft
		{
			front = false,
			offset = 0.0000 0.0222 -0.6111,
			radius = 0.16f,
			width = 0.575f,
		}

		template = PassengerSeat2,

		passenger FrontLeft
		{
			showPassenger = true,
			hasRoof = false,

			position inside
			{
				offset = 0.0000 0.5333 -0.3000,
				rotate = -69.6916 0.0000 0.0000,
			}

			position outside
			{
				offset = 0.4444 -0.2333 0.2111,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatFrontLeft,
			}
		}

		passenger FrontRight
		{
			showPassenger = true,
			hasRoof = false,

			position inside
			{
				offset = 0.0000 0.6222 -0.6000,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = -0.5556 -0.3000 -0.1444,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatFrontRight,
			}
		}

		area Engine
		{
			xywh = 0.0111 1.1667 1.6000 1.2000,
		}

		area TruckBed
		{
			xywh = 0.0000 -0.6444 1.6000 1.0000,
		}

		area SeatFrontLeft
		{
			xywh = 0.5222 -0.3000 0.6000 0.8000,
		}

		area SeatFrontRight
		{
			xywh = 0.0111 -1.6000 1.6000 0.9111,
		}

		area GasTank
		{
			xywh = 0.0111 0.1556 1.6000 0.9111,
		}

		area TireFrontLeft
		{
			xywh = 0.0000 0.7889 1.7333 0.4667,
		}

		area TireRearLeft
		{
			xywh = 0.0000 -0.7778 1.7333 0.4667,
		}

		template = Trunk/part/TruckBed,

		part TruckBed
		{
			itemType = Base.SmallSaddlebags,
		}

		template = Seat/part/SeatFrontLeft,
		template = Seat/part/SeatFrontRight,

		part Seat*
		{
			category = nodisplay,
			specificItem = false,
			itemType = filcher.CycleSeatNoStorage,

			table install
			{
				skills = Mechanics:2,
				recipes = Motorcycle Mechanics,
			}

			table uninstall
			{
				skills = Mechanics:2,
				recipes = Motorcycle Mechanics,
			}

			
			
		}

		template = GasTank,

		part GasTank
		{
			specificItem = false,
			itemType = filcher.SmallCycleGasTank;filcher.CycleGasTank,

			install
			{
				skills = Mechanics:4,
				recipes = Motorcycle Mechanics,
			}

			uninstall
			{
				skills = Mechanics:4,
				recipes = Motorcycle Mechanics,
			}
		}

		template = Battery,

		part Battery
		{
			specificItem = false,
			itemType = filcher.CycleBattery,
		}

		template = Engine,
		template = Muffler,

		part Muffler
		{
			specificItem = false,
			itemType = filcher.OldCycleMuffler;filcher.NormalCycleMuffler;filcher.ModernCycleMuffler,

			table install
			{
				recipes = Motorcycle Mechanics,
			}

			table uninstall
			{
				recipes = Motorcycle Mechanics,
			}
		}

		part PassengerCompartment
		{
			category = nodisplay,

			lua
			{
				update = Vehicles.Update.PassengerCompartment,
			}
		}

		template = Window/part/WindowFrontLeft,
		template = Window/part/WindowFrontRight,

		part Wind*
		{
			category = nodisplay,
			itemType= Base.nil,

			table install
			{
				recipes = Impossible,
			}

			table uninstall
			{
				recipes = Impossible,
			}
		}

		template = Door/part/DoorFrontLeft,
		template = Door/part/DoorFrontRight,

		part Door*
		{
			category = nodisplay,
			itemType= Base.nil,

			table install
			{
				sound = VehicleDoorOpenSportsCar,
			}

			anim Close
			{
				sound = VehicleDoorCloseSportsCar,
			}

			anim Lock
			{
				sound = LockVehicleDoorSportsCar,
			}

			anim Unlock
			{
				sound = UnlockVehicleDoorSportsCar,
			}

			anim IsLocked
			{
				sound = VehicleDoorIsLockedSportsCar,
			}

			table install
			{
				recipes = Advanced Mechanics,
			}

			table uninstall
			{
				recipes = Advanced Mechanics,
			}
		}

		template = Tire/part/TireFrontLeft,
		template = Tire/part/TireRearLeft,

		part TireFrontLeft
		{
			specificItem = false,
			itemType = filcher.OldCycleTire;filcher.NormalCycleTire;filcher.ModernCycleTire,

			model InflatedTirePlusWheel
			{
				file = AM2_Courier_wheel_front,
			}
		}

		part TireRearLeft
		{
			specificItem = false,
			itemType = filcher.OldCycleTire;filcher.NormalCycleTire;filcher.ModernCycleTire,

			model InflatedTirePlusWheel
			{
				file = AM2_Courier_wheel_rear,
			}
		}

		template = Brake/part/BrakeFrontLeft,
		template = Brake/part/BrakeRearLeft,

		part Brake*
		{
			specificItem = false,
			itemType = filcher.OldCycleBrake;filcher.NormalCycleBrake;filcher.ModernCycleBrake,

			table install
			{
				skills = Mechanics:4,
				recipes = Motorcycle Mechanics,
			}

			table uninstall
			{
				skills = Mechanics:4,
				recipes = Motorcycle Mechanics,
			}
		}

		template = Suspension/part/SuspensionFrontLeft,
		template = Suspension/part/SuspensionRearLeft,

		part Suspension*
		{
			specificItem = false,
			itemType = filcher.NormalCycleSuspension;filcher.ModernCycleSuspension,

			table install
			{
				skills = Mechanics:4,
				recipes = Motorcycle Mechanics,
			}

			table uninstall
			{
				skills = Mechanics:4,
				recipes = Motorcycle Mechanics,
			}
		}

		template = Headlight/part/HeadlightLeft,
		template = Headlight/part/HeadlightRearLeft,

/*		attachment trailerfront
		{
			offset = 0.0000 0.0000 1.0100,
			rotate = 0.0000 0.0000 0.0000,
			zoffset = -1.0000,
		}*/

		attachment trailer
		{
			offset = 0.0000 0.0000 -1.0400,
			rotate = 0.0000 0.0000 0.0000,
			zoffset = -1.0000,
		}
	}
}
